{"version":3,"sources":["comps/search.js","data/FoursquareApi.js","comps/mapComp.js","comps/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["showingVenues","Search","state","query","toggleIcon","drawerVis","venueList","filterList","compare","RegExp","escapeRegExp","_this","props","allLocations","filter","v","test","title","genre","length","setState","updateMarkers","unhideMarkers","sort","sortBy","buttonClicks","matching","marker","id","collectActiveMarker","mProps","foundPair","markers","m","filterMarkers","openInfoW","drawerAni","e","className","this","debounce","_this2","react_default","a","createElement","type","placeholder","value","onChange","evt","target","map","index","key","onClick","tabIndex","aria-label","Component","CLIENT_ID","CLIENT_SECRET","apiPrefix","detailsEndpoint","concat","headers","extendedDetails","fetch","method","then","res","json","mapComp","markerData","showInfoWindow","selectedMarker","selectedMarkerProps","infoWindowPic","initMap","placeMarkers","mapError","venues","setMap","location","markerProps","position","push","animation","google","maps","Animation","DROP","Marker","addListener","getEventData","properties","removeMarkers","p","fMarker","prefix","suffix","size","photoURL","setAnimation","BOUNCE","FoursquareApi","meta","code","response","venue","bestPhoto","alert","errorDetail","closeInfoWindow","Object","keys","window","gm_authFailure","dist","role","onReady","initialCenter","lat","lng","long","zoom","style","width","height","styles","mapStyles","search","assign","visible","onClose","src","alt","GoogleApiWrapper","apiKey","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","children","App","locations","comps_ErrorBoundary","comps_mapComp","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.11c4bea2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport escapeRegExp from 'escape-string-regexp';\r\nimport sortBy from 'sort-by'\r\nimport { debounce } from \"debounce\";\r\n\r\n\r\nlet showingVenues;\r\nclass Search extends Component {\r\n    state = {\r\n        query: '',\r\n        toggleIcon: 'fas fa-times fa-2x',\r\n        drawerVis: 'drawerContainer',\r\n        venueList: []\r\n    }\r\n    componentDidMount() {\r\n        showingVenues = this.props.allLocations\r\n        showingVenues.sort(sortBy('title'))\r\n        this.setState({ venueList: showingVenues })\r\n        this.filterList = debounce(this.filterList, 100);\r\n    }\r\n\r\n    filterList = (query) => {\r\n        if (query) {\r\n            // @description user typed query is compared to the list of locations \r\n            // and returns matching locations\r\n            const compare = new RegExp(escapeRegExp(query), 'i')\r\n            showingVenues = this.props.allLocations.filter((v) => compare.test(v.title) || compare.test(v.genre))\r\n            // error handling lets user know no matches were found\r\n            if (showingVenues.length === 0) {\r\n                showingVenues =\r\n                    [{ \"title\": \"Sorry, no matches\", \"genre\": \"Sorry, no matches\" }]\r\n            }\r\n            this.setState({ query: query, venueList: showingVenues })\r\n            this.props.updateMarkers(showingVenues)\r\n        } else {\r\n            showingVenues = this.props.allLocations\r\n            this.setState({ query: query, venueList: this.props.allLocations })\r\n            this.props.unhideMarkers()\r\n        }\r\n        showingVenues.sort(sortBy('title'))\r\n\r\n    }\r\n\r\n    buttonClicks = (v) => {\r\n        /* function fires when user clicks\r\n         on the sidebar list of venues. */\r\n        let matching = this.props.allLocations.filter((marker) => marker.id === v.id)\r\n        /*matches evt.target.id to the id of venues from json file\r\n        to get access to basic properities on this venue */\r\n        this.collectActiveMarker(matching)\r\n    }\r\n\r\n    collectActiveMarker = (mProps) => {\r\n        /* function passes info on to other functions\r\n        to open the infoWindow on target venue AND display\r\n        only the map markers that match evt.target    */\r\n        let foundPair = this.props.markers.filter((m) => m.id === mProps[0].id)\r\n        this.props.filterMarkers(mProps, foundPair)\r\n        this.props.openInfoW(mProps[0], foundPair[0])\r\n    }\r\n\r\n    drawerAni = (e) => {\r\n        if (e.className === \"fas fa-times fa-2x\") {\r\n            this.setState({\r\n                toggleIcon: 'fas fa-bars fa-2x',\r\n                drawerVis: 'drawerContainer notShowing'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                toggleIcon: 'fas fa-times fa-2x',\r\n                drawerVis: 'drawerContainer'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className={this.state.drawerVis}>\r\n                <div className=\"searchContainer\">\r\n\r\n                    <div className=\"searchInput\">\r\n                        <input\r\n                            id=\"zoom-to-area-text\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search by name or music genre\"\r\n                            value={this.state.query}\r\n                            onChange={(evt) => { this.filterList(evt.target.value) }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"searchList\">\r\n                        {this.state.venueList.map((v, index) => (\r\n                            <button\r\n                                key={index}\r\n                                className='venueListItem'\r\n                                onClick={(evt) => { this.buttonClicks(evt.target) }}\r\n                                tabIndex='0'\r\n                                aria-label=\"button\"\r\n                                id={v.id}>{v.title}</button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"drawer-icon\">\r\n                    <i className={this.state.toggleIcon}\r\n                        onClick={(evt) => { this.drawerAni(evt.target) }}></i></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","const CLIENT_ID = 'NLLRCVGJ4BHIN4NUPHFUGV5ENQJTDSTBEW0HQYL0XBYETIPY';\r\nconst CLIENT_SECRET = 'VYS1IKENWOYN451CYZV20HN1KHO1PBUM1UA3M1SG2O33QTAK';\r\n\r\nconst apiPrefix = `https://api.foursquare.com/v2/venues/`\r\nconst searchEndpoint = `search?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20180323&limit=1`;\r\nconst detailsEndpoint = `?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20180323&limit=1`\r\n\r\nconst headers = {}\r\n\r\n\r\nexport const search = (lat, long, query) => {\r\n    fetch(`${apiPrefix}${searchEndpoint}&ll=${lat},${long}&query=${query}`, {\r\n        method: 'GET',\r\n        headers\r\n    })\r\n        .then(res => res.json())\r\n\r\n}\r\n\r\n\r\n\r\nexport const extendedDetails = (id) =>\r\n    fetch(`${apiPrefix}${id}${detailsEndpoint}`, {\r\n        method: 'GET',\r\n        headers\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res)\r\n\r\n","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\r\nimport mapStyles from '../data/mapstyles.json';\r\nimport Search from './search';\r\nimport * as FoursquareApi from '../data/FoursquareApi'\r\n\r\n\r\nconst __API_KEY__ = \"AIzaSyAVJX-nedXRZCvCQiScRwO-RNsZyeepD7E\";\r\nclass mapComp extends Component {\r\n    state = {\r\n        map: null,\r\n        markers: [],\r\n        markerData: [],\r\n        showInfoWindow: false,\r\n        selectedMarker: {},\r\n        selectedMarkerProps: [],\r\n        infoWindowPic: null\r\n    }\r\n    //once react is loaded initialize\r\n    initMap = (props, map) => {\r\n        this.setState({ map });\r\n        this.placeMarkers(this.props.allLocations)\r\n        this.mapError();\r\n    }\r\n\r\n    mapError() {\r\n        window.gm_authFailure = () => {\r\n            alert('Unfortunately, Google Maps is unable to load at the moment. Please check your internet connection and try again.')\r\n        };\r\n    }\r\n    //    @description places marker on map by coordinates\r\n    //    and returns data about each marker\r\n    placeMarkers = (venues) => {\r\n        if (!venues) {\r\n            return;\r\n        }\r\n        this.state.markers.map((m) => m.setMap(null));\r\n\r\n        let markerData = [];\r\n        let markers = venues.map((location, index) => {\r\n            //for each marker make an object of data\r\n            let markerProps = {\r\n                key: index,\r\n                index: index,\r\n                title: location.title,\r\n                position: location.location,\r\n                id: location.id\r\n            };\r\n            markerData.push(markerProps);\r\n            let animation = this.props.google.maps.Animation.DROP;\r\n            let marker = new this.props.google.maps.Marker({\r\n                position: location.location,\r\n                map: this.state.map,\r\n                id: markerProps.id,\r\n                animation\r\n            });\r\n            marker.addListener('click', () => {\r\n                /*when individual marker clicked will pass\r\n                    marker properties and marker evt data to function */\r\n                this.getEventData(markerProps, marker);\r\n            });\r\n            return marker;\r\n        }) // close markers\r\n\r\n        this.setState({ markers: markers, markerData: markerData });\r\n    }\r\n\r\n    filterMarkers = (properties, marker) => {\r\n        this.setState({ selectedMarker: marker, selectedMarkerProps: properties })\r\n        this.removeMarkers(properties[0])\r\n    }\r\n\r\n    removeMarkers = (p) => {\r\n        let fMarks = this.state.markers.filter((m) => m.id !== p.id)\r\n        fMarks.map((fMarker) =>\r\n            (fMarker.map = (fMarker.setMap(null))));\r\n    }\r\n\r\n    getEventData = (properties, marker) => {\r\n        /* @description gets event data from marker and collects properties from\r\n         selected venue then sends param to Foursquare API */\r\n        let prefix = '';\r\n        let suffix = '';\r\n        let size = '';\r\n        let photoURL = '';\r\n\r\n        this.setState({\r\n            selectedMarker: marker, selectedMarkerProps: properties,\r\n            infoWindowPic: null\r\n        })\r\n        marker.setAnimation(this.props.google.maps.Animation.BOUNCE);\r\n        FoursquareApi.extendedDetails(properties.id).then((res) => {\r\n            if (res.meta.code === 200) {\r\n                prefix = res.response.venue.bestPhoto.prefix\r\n                suffix = res.response.venue.bestPhoto.suffix\r\n                size = `cap200`\r\n                photoURL = `${prefix}${size}${suffix}`\r\n                this.setState({ showInfoWindow: true, infoWindowPic: photoURL })\r\n                return photoURL\r\n            } else {\r\n                return alert(res.meta.errorDetail);\r\n            }\r\n        })\r\n    }\r\n\r\n    closeInfoWindow = () => {\r\n        this.unhideMarkers();\r\n    }\r\n\r\n    // @resets markers back on map\r\n    unhideMarkers = () => {\r\n        let venues = this.props.allLocations\r\n        this.placeMarkers(venues)\r\n        //error handling will only fire if marker was selected by user\r\n        if (Object.keys(this.state.selectedMarker).length !== 0) {\r\n            this.state.selectedMarker.setAnimation(null);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const cssStyle = {\r\n            width: '100%',\r\n            height: '100%'\r\n        }\r\n\r\n        return (\r\n            <Map role=\"application\"\r\n                aria-label=\"map\"\r\n                onReady={this.initMap}\r\n                initialCenter={{\r\n                    lat: this.props.lat,\r\n                    lng: this.props.long\r\n                }}\r\n                zoom={this.props.zoom}\r\n                style={cssStyle}\r\n                google={this.props.google}\r\n                styles={mapStyles} >\r\n                <Search {...this.props} {...this.state}\r\n                    openInfoW={this.getEventData} filterMarkers={this.filterMarkers} updateMarkers={this.placeMarkers}\r\n                    unhideMarkers={this.unhideMarkers}\r\n                />\r\n                <InfoWindow\r\n                    marker={this.state.selectedMarker}\r\n                    visible={this.state.showInfoWindow}\r\n                    onClose={this.closeInfoWindow}\r\n                >\r\n                    <div className=\"infoWindowStyles\">\r\n                        <h3>{this.state.selectedMarkerProps.title}</h3>\r\n                        <figure>\r\n                            <img src={this.state.infoWindowPic}\r\n                                alt={this.state.selectedMarkerProps.title} />\r\n                            <figcaption>Photo courtesy of Foursquare API</figcaption>\r\n                        </figure>\r\n                    </div>\r\n                </InfoWindow>\r\n            </Map>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({ apiKey: __API_KEY__ })(mapComp);","import React, { Component } from 'react';\r\n\r\n// https://reactjs.org/docs/error-boundaries.html\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // You can also log the error to an error reporting service\r\n        alert(error, info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <h1>Something went wrong.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport locations from './data/locations.json';\r\nimport MapComp from './comps/mapComp';\r\nimport ErrorBoundary from './comps/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    lat: 30.2672,\r\n    long: -97.7431,\r\n    zoom: 12,\r\n    allLocations: locations,\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>bands</h1>\r\n        </header>\r\n        <nav>\r\n          <ul>\r\n            <li>home</li>\r\n            <li>artists</li>\r\n            <li>venues</li>\r\n            <li>about</li>\r\n            <li>contact us</li>\r\n          </ul>\r\n        </nav>\r\n        <ErrorBoundary>\r\n          <MapComp {...this.state} />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}